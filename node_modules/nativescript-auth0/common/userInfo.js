/// OIDC Standard Claims user information
/// - note: [Claims](https://auth0.com/docs/protocols/oidc#claims)
export class UserInfo {
    constructor(sub, name, givenName, familyName, middleName, nickname, preferredUsername, profileURL, pictureURL, websiteURL, email, emailVerified, gender, birthdate, zoneinfo, locale, phoneNumber, phoneNumberVerified, address, updatedAt, customClaims) {
        this.sub = sub;
        this.name = name;
        this.givenName = givenName;
        this.familyName = familyName;
        this.middleName = middleName;
        this.nickname = nickname;
        this.preferredUsername = preferredUsername;
        this.profileURL = profileURL;
        this.pictureURL = pictureURL;
        this.websiteURL = websiteURL;
        this.email = email;
        this.emailVerified = emailVerified;
        this.gender = gender;
        this.birthdate = birthdate;
        this.zoneinfo = zoneinfo;
        this.locale = locale;
        this.phoneNumber = phoneNumber;
        this.phoneNumberVerified = phoneNumberVerified;
        this.address = address;
        this.updatedAt = updatedAt;
        this.customClaims = customClaims;
    }
    static initWithJson(json) {
        const sub = json["sub"];
        if (sub == null) {
            return undefined;
        }
        const name = json["name"];
        const givenName = json["given_name"];
        const familyName = json["family_name"];
        const middleName = json["middle_name"];
        const nickname = json["nickname"];
        const preferredUsername = json["preferred_username"];
        const profileURL = json["profile"];
        const pictureURL = json["picture"];
        const websiteURL = json["website"];
        const email = json["email"];
        let emailVerified;
        const emailVerifiedRaw = json["email_verified"];
        if (emailVerifiedRaw != null) {
            emailVerified = (typeof emailVerifiedRaw === 'boolean')
                ? emailVerifiedRaw
                : emailVerifiedRaw === 'true';
        }
        const gender = json["gender"];
        const birthdate = json["birthdate"];
        const zoneinfo = json["zoneinfo"];
        const locale = json["locale"];
        const phoneNumber = json["phone_number"];
        let phoneNumberVerified;
        const phoneNumberVerifiedRaw = json["phone_number_verified"];
        if (phoneNumberVerifiedRaw != null) {
            phoneNumberVerified = (typeof phoneNumberVerifiedRaw === 'boolean')
                ? phoneNumberVerifiedRaw
                : phoneNumberVerifiedRaw === 'true';
        }
        const address = json["address"];
        let updatedAt;
        const dateString = json["updated_at"];
        if (dateString != null) {
            updatedAt = new Date(dateString);
        }
        let customClaims = {};
        for (const key in json) {
            if (UserInfo.publicClaims.indexOf(key) > -1) {
                continue;
            }
            customClaims[key] = json[key];
        }
        return new UserInfo(sub, name, givenName, familyName, middleName, nickname, preferredUsername, profileURL, pictureURL, websiteURL, email, emailVerified, gender, birthdate, zoneinfo, locale, phoneNumber, phoneNumberVerified, address, updatedAt, customClaims);
    }
    toJSON() {
        const data = {
            sub: this.sub,
            name: this.name,
            given_name: this.givenName,
            family_name: this.familyName,
            middle_name: this.middleName,
            nickname: this.nickname,
            preferred_username: this.preferredUsername,
            profile: this.profileURL,
            picture: this.pictureURL,
            website: this.websiteURL,
            email: this.email,
            email_verified: this.emailVerified,
            gender: this.gender,
            birthdate: this.birthdate,
            zoneinfo: this.zoneinfo,
            locale: this.locale,
            phone_number: this.phoneNumber,
            phone_number_verified: this.phoneNumberVerified,
            address: this.address,
            updated_at: this.updatedAt
        };
        for (const key in this.customClaims) {
            data[key] = this.customClaims[key];
        }
        return data;
    }
}
UserInfo.publicClaims = [
    "sub",
    "name",
    "given_name",
    "family_name",
    "middle_name",
    "nickname",
    "preferred_username",
    "profile",
    "picture",
    "website",
    "email",
    "email_verified",
    "gender",
    "birthdate",
    "zoneinfo",
    "locale",
    "phone_number",
    "phone_number_verified",
    "address",
    "updated_at"
];
//# sourceMappingURL=userInfo.js.map