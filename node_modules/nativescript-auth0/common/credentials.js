/**
 User's credentials obtained from Auth0.
 What values are available depends on what type of Auth request you perfomed,
 so if you used WebAuth (`/authorize` call) the `response_type` and `scope` will determine what tokens you get
 */
export class Credentials {
    constructor(accessToken = undefined, tokenType = undefined, idToken = undefined, refreshToken = undefined, expiresIn = undefined, expiresAt = undefined, scope = undefined) {
        this.accessToken = accessToken;
        this.tokenType = tokenType;
        this.idToken = idToken;
        this.refreshToken = refreshToken;
        this.expiresIn = expiresIn;
        this.expiresAt = expiresAt;
        this.scope = scope;
        if (expiresAt == null && expiresIn != null) {
            this.expiresAt = new Date(Date.now() + expiresIn * 1000);
        }
        if (expiresIn == null && expiresAt != null) {
            this.expiresIn = (expiresAt.getTime() - Date.now()) / 1000;
        }
    }
    static initWithJson(json) {
        const accessToken = json["access_token"];
        const tokenType = json["token_type"];
        const idToken = json["id_token"];
        const refreshToken = json["refresh_token"];
        const expiresIn = json["expires_in"];
        const expiresAt = json["expires_at"];
        const scope = json["scope"];
        return new Credentials(accessToken, tokenType, idToken, refreshToken, (expiresIn != null) ? Number(expiresIn) : undefined, (expiresAt != null) ? new Date(expiresAt) : undefined, scope);
    }
    toJSON() {
        return {
            access_token: this.accessToken,
            token_type: this.tokenType,
            id_token: this.idToken,
            refresh_token: this.refreshToken,
            expires_in: this.expiresIn,
            expires_at: this.expiresAt,
            scope: this.scope
        };
    }
}
//# sourceMappingURL=credentials.js.map