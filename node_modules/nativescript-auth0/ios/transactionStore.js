/// Keeps track of current Auth Transaction
export class TransactionStore {
    get current() {
        return this._current;
    }
    resume(url, options) {
        let resumed = (this._current != null) ? this._current.resume(url, options) : false;
        if (resumed != null) {
            this._current = undefined;
        }
        return resumed;
    }
    store(transaction) {
        if (this._current != null) {
            this._current.cancel();
        }
        this._current = transaction;
    }
    cancel(transaction) {
        transaction.cancel();
        if (this._current != null && this._current.state === transaction.state) {
            this._current = undefined;
        }
    }
    clear() {
        this._current = undefined;
    }
}
TransactionStore.shared = new TransactionStore();
//# sourceMappingURL=transactionStore.js.map