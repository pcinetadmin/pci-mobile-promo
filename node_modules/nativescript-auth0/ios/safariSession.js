import { AuthSession } from './authSession';
import { TransactionStore } from './transactionStore';
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SafariSessionDelegate = void 0;
var SafariSessionDelegate = /** @class */ (function (_super) {
    __extends(SafariSessionDelegate, _super);
    function SafariSessionDelegate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SafariSessionDelegate.initWithOwner = function (owner) {
        var delegate = SafariSessionDelegate.new();
        delegate._owner = owner;
        return delegate;
    };
    SafariSessionDelegate.prototype.safariViewControllerDidFinish = function (controller) {
        TransactionStore.shared.cancel(this._owner.get());
    };
    SafariSessionDelegate.ObjCProtocols = [SFSafariViewControllerDelegate];
    return SafariSessionDelegate;
}(NSObject));
exports.SafariSessionDelegate = SafariSessionDelegate;
export class SafariSession extends AuthSession {
    constructor(controller, redirectURL, state = undefined, handler, finish, logger) {
        super(redirectURL, state, handler, finish, logger);
        this.controller = new WeakRef(controller);
        this._delegate = SafariSessionDelegate.initWithOwner(new WeakRef(this));
        controller.delegate = this._delegate;
    }
}
//# sourceMappingURL=safariSession.js.map