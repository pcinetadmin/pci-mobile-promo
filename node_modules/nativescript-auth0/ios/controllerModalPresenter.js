export class ControllerModalPresenter {
    get rootViewController() {
        const keyWindow = UIApplication.sharedApplication.keyWindow;
        return (keyWindow != null) ? keyWindow.rootViewController : undefined;
    }
    present(controller) {
        if (this.topViewController != null) {
            this.topViewController.presentViewControllerAnimatedCompletion(controller, true, null);
        }
    }
    get topViewController() {
        const root = this.rootViewController;
        if (root == null) {
            return undefined;
        }
        return this.findTopViewController(root);
    }
    findTopViewController(root) {
        const presented = root.presentedViewController;
        if (presented != null) {
            return this.findTopViewController(presented);
        }
        if (root instanceof UISplitViewController) {
            const last = root.viewControllers.lastObject;
            if (last == null) {
                return root;
            }
            return this.findTopViewController(last);
        }
        else if (root instanceof UINavigationController) {
            const top = root.topViewController;
            if (top == null) {
                return root;
            }
            return this.findTopViewController(top);
        }
        else if (root instanceof UITabBarController) {
            const selected = root.selectedViewController;
            if (selected == null) {
                return root;
            }
            return this.findTopViewController(selected);
        }
        else {
            return root;
        }
    }
}
//# sourceMappingURL=controllerModalPresenter.js.map