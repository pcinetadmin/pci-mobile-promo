import { ParameterBuilder } from '../parameterBuilder';
/**
 * Request to perform a non-authentication related action
 * like creating a user or requesting a change password
 */
export class DatabaseConnectionRequest {
    constructor(request) {
        this.request = request;
    }
    /**
     * Add the given parameters to the request
     * @param parameters to be sent with the request
     * @return itself
     */
    addParameters(parameters) {
        this.request.addParameters(parameters);
        return this;
    }
    /**
     * Add a parameter by name to the request
     * @param name of the parameter
     * @param value of the parameter
     * @return itself
     */
    addParameter(name, value) {
        this.request.addParameter(name, value);
        return this;
    }
    /**
     * Add a header for request: the, e.g. "Authorization"
     * @param name of the header
     * @param value of the header
     * @return itself
     */
    addHeader(name, value) {
        this.request.addHeader(name, value);
        return this;
    }
    /**
     * Set the Auth0 Database Connection used for this request using its name.
     * @param connection name
     * @return itself
     */
    setConnection(connection) {
        this.request.addParameter(ParameterBuilder.CONNECTION_KEY, connection);
        return this;
    }
    /**
     * Executes the request async and returns its results via callback
     * @param callback called on success or failure of the request
     */
    start(callback) {
        this.request.start(callback);
    }
}
//# sourceMappingURL=databaseConnectionRequest.js.map