import { Authentication } from '../../result/authentication';
/**
 * Request to fetch a profile after a successful authentication with Auth0 Authentication API
 */
export class ProfileRequest {
    constructor(credentialsRequest, userInfoRequest) {
        this.credentialsRequest = credentialsRequest;
        this.userInfoRequest = userInfoRequest;
    }
    /**
     * Adds additional parameters for the login request
     *
     * @param parameters as a non-null dictionary
     * @return itself
     */
    addParameters(parameters) {
        this.credentialsRequest.addAuthenticationParameters(parameters);
        return this;
    }
    /**
     * Set the scope used to authenticate the user
     *
     * @param scope value
     * @return itself
     */
    setScope(scope) {
        this.credentialsRequest.setScope(scope);
        return this;
    }
    /**
     * Starts the log in request and then fetches the user's profile
     *
     * @param callback called on either success or failure
     */
    start(callback) {
        this.credentialsRequest.start({
            onSuccess: (credentials) => {
                this.userInfoRequest
                    .addHeader(ProfileRequest.HEADER_AUTHORIZATION, `Bearer ${credentials.accessToken}`)
                    .start({
                    onSuccess: function (profile) {
                        callback.onSuccess(new Authentication(profile, credentials));
                    },
                    onFailure: function (error) {
                        callback.onFailure(error);
                    }
                });
            },
            onFailure: (error) => {
                callback.onFailure(error);
            }
        });
    }
}
ProfileRequest.HEADER_AUTHORIZATION = "Authorization";
//# sourceMappingURL=profileRequest.js.map