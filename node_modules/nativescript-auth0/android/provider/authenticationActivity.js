var Intent = android.content.Intent;
var Log = android.util.Log;
import { WebAuthProvider } from './webAuthProvider';
import { CustomTabsController } from './customTabsController';
const TAG = 'AuthenticationActivity';
export const EXTRA_CONNECTION_NAME = "org.nativescript.auth0.EXTRA_CONNECTION_NAME";
export const EXTRA_AUTHORIZE_URI = "org.nativescript.auth0.EXTRA_AUTHORIZE_URI";
export const EXTRA_INTENT_LAUNCHED = "org.nativescript.auth0.EXTRA_INTENT_LAUNCHED";
export const EXTRA_CT_OPTIONS = "org.nativescript.auth0.EXTRA_CT_OPTIONS";
export function authenticateUsingBrowser(context, authorizeUri, options = undefined) {
    Log.d(TAG, 'Building intent');
    const clazz = AuthenticationActivity.class;
    Log.d(TAG, 'Got class');
    const intent = new Intent(context, clazz);
    Log.d(TAG, 'Init intent');
    intent.putExtra(EXTRA_AUTHORIZE_URI, authorizeUri);
    Log.d(TAG, 'Put extra 1');
    intent.putExtra(EXTRA_CT_OPTIONS, options);
    Log.d(TAG, 'Put extra 2');
    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
    Log.d(TAG, 'Starting authentication...');
    context.startActivity(intent);
}
var AuthenticationActivity = /** @class */ (function (_super) {
    __extends(AuthenticationActivity, _super);
    function AuthenticationActivity() {
        var _this = _super.call(this) || this;
        return global.__native(_this);
    }
    AuthenticationActivity.prototype.onNewIntent = function (intent) {
        _super.prototype.onNewIntent.call(this, intent);
        this.setIntent(intent);
    };
    AuthenticationActivity.prototype.onActivityResult = function (requestCode, resultCode, data) {
        if (resultCode === android.app.Activity.RESULT_OK) {
            this.deliverAuthenticationResult(data);
        }
        this.finish();
    };
    AuthenticationActivity.prototype.onSaveInstanceState = function (outState) {
        _super.prototype.onSaveInstanceState.call(this, outState);
        outState.putBoolean(EXTRA_INTENT_LAUNCHED, this.intentLaunched);
    };
    AuthenticationActivity.prototype.onCreate = function (savedInstanceState) {
        _super.prototype.onCreate.call(this, savedInstanceState);
        if (savedInstanceState != null) {
            this.intentLaunched = savedInstanceState.getBoolean(EXTRA_INTENT_LAUNCHED, false);
        }
    };
    AuthenticationActivity.prototype.onResume = function () {
        _super.prototype.onResume.call(this);
        if (!this.intentLaunched && this.getIntent().getExtras() == null) {
            // Activity was launched in an unexpected way
            this.finish();
            return;
        }
        else if (!this.intentLaunched) {
            this.intentLaunched = true;
            this.launchAuthenticationIntent();
            return;
        }
        this.deliverAuthenticationResult(this.getIntent());
        this.setResult(android.app.Activity.RESULT_CANCELED);
        this.finish();
    };
    AuthenticationActivity.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
        if (this.customTabsController != null) {
            this.customTabsController.unbindService();
            this.customTabsController = null;
        }
    };
    AuthenticationActivity.prototype.launchAuthenticationIntent = function () {
        var extras = this.getIntent().getExtras();
        var authorizeUri = extras.getParcelable(EXTRA_AUTHORIZE_URI);
        this.customTabsController = this.createCustomTabsController(this);
        this.customTabsController.setCustomizationOptions(extras.getParcelable(EXTRA_CT_OPTIONS));
        this.customTabsController.bindService();
        this.customTabsController.launchUri(authorizeUri);
    };
    AuthenticationActivity.prototype.createCustomTabsController = function (context) {
        return new CustomTabsController(context);
    };
    AuthenticationActivity.prototype.deliverAuthenticationResult = function (result) {
        WebAuthProvider.resume(result);
    };
    AuthenticationActivity = __decorate([
        JavaProxy('org.nativescript.auth0.AuthenticationActivity')
    ], AuthenticationActivity);
    return AuthenticationActivity;
}(android.app.Activity));
export { AuthenticationActivity };
//# sourceMappingURL=authenticationActivity.js.map