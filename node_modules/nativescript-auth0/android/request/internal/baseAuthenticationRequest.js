import { SimpleRequest } from './simpleRequest';
import { AuthenticationErrorBuilder } from './authenticationErrorBuilder';
import { ParameterBuilder } from '../../authentication/parameterBuilder';
export class BaseAuthenticationRequest extends SimpleRequest {
    constructor(url, httpMethod, clazz) {
        super(url, httpMethod, clazz, new AuthenticationErrorBuilder());
    }
    /**
     * Sets the 'grant_type' parameter
     *
     * @param grantType grant type
     * @return itself
     */
    setGrantType(grantType) {
        this.addParameter(ParameterBuilder.GRANT_TYPE_KEY, grantType);
        return this;
    }
    /**
     * Sets the 'realm' parameter. A realm identifies the host against which the authentication will made: be, and usually helps to know which username and password to use.
     *
     * @param realm name of the realm
     * @return itself
     */
    setRealm(realm) {
        this.addParameter(ParameterBuilder.REALM_KEY, realm);
        return this;
    }
    /**
     * Sets the 'scope' parameter.
     *
     * @param scope a scope value
     * @return itself
     */
    setScope(scope) {
        this.addParameter(ParameterBuilder.SCOPE_KEY, scope);
        return this;
    }
    /**
     * Sets the 'audience' parameter.
     *
     * @param audience an audience value
     * @return itself
     */
    setAudience(audience) {
        this.addParameter(ParameterBuilder.AUDIENCE_KEY, audience);
        return this;
    }
    /**
     * Sets the 'access_token' parameter
     *
     * @param accessToken a access token
     * @return itself
     */
    setAccessToken(accessToken) {
        this.addParameter(ParameterBuilder.ACCESS_TOKEN_KEY, accessToken);
        return this;
    }
    addAuthenticationParameters(parameters) {
        const params = Object.assign({}, parameters);
        this.addParameters(params);
        return this;
    }
}
BaseAuthenticationRequest.TAG = 'BaseAuthenticationRequest';
//# sourceMappingURL=baseAuthenticationRequest.js.map