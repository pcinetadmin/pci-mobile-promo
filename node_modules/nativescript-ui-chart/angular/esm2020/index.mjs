import { Component, ElementRef, Inject, Directive, NgModule } from '@angular/core';
import { registerElement } from '@nativescript/angular';
import * as chartModule from 'nativescript-ui-chart';
import { ObservableArray } from '@nativescript/core';
import * as i0 from "@angular/core";
export class SeriesComponentBase {
    get nativeSeries() {
        return this._nativeSeries;
    }
}
export class RadCartesianChartComponent {
    constructor(_elementRef) {
        this._elementRef = _elementRef;
        this._nativeChart = _elementRef.nativeElement;
    }
    get nativeElement() {
        return this._nativeChart;
    }
    get cartesianChart() {
        return this._nativeChart;
    }
}
RadCartesianChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: RadCartesianChartComponent, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Component });
RadCartesianChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.2", type: RadCartesianChartComponent, selector: "RadCartesianChart", ngImport: i0, template: ``, isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: RadCartesianChartComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'RadCartesianChart',
                    template: ``
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class RadPieChartComponent {
    constructor(_elementRef) {
        this._elementRef = _elementRef;
        this._nativeChart = _elementRef.nativeElement;
    }
    get nativeElement() {
        return this._nativeChart;
    }
    get pieChart() {
        return this._nativeChart;
    }
}
RadPieChartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: RadPieChartComponent, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Component });
RadPieChartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.2", type: RadPieChartComponent, selector: "RadPieChart", ngImport: i0, template: ``, isInline: true });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: RadPieChartComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'RadPieChart',
                    template: ``
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class RadLegendViewDirective {
    constructor() { }
}
RadLegendViewDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: RadLegendViewDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
RadLegendViewDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: RadLegendViewDirective, selector: "RadLegendView", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: RadLegendViewDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'RadLegendView'
                }]
        }], ctorParameters: function () { return []; } });
export class CategoricalAxisDirective {
    constructor() { }
}
CategoricalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: CategoricalAxisDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
CategoricalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: CategoricalAxisDirective, selector: "CategoricalAxis", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: CategoricalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'CategoricalAxis'
                }]
        }], ctorParameters: function () { return []; } });
export class LinearAxisDirective {
    constructor() { }
}
LinearAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: LinearAxisDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
LinearAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: LinearAxisDirective, selector: "LinearAxis", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: LinearAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'LinearAxis'
                }]
        }], ctorParameters: function () { return []; } });
export class DateTimeCategoricalAxisDirective {
    constructor() { }
}
DateTimeCategoricalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: DateTimeCategoricalAxisDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
DateTimeCategoricalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: DateTimeCategoricalAxisDirective, selector: "DateTimeCategoricalAxis", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: DateTimeCategoricalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'DateTimeCategoricalAxis'
                }]
        }], ctorParameters: function () { return []; } });
export class DateTimeContinuousAxisDirective {
    constructor() { }
}
DateTimeContinuousAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: DateTimeContinuousAxisDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
DateTimeContinuousAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: DateTimeContinuousAxisDirective, selector: "DateTimeContinuousAxis", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: DateTimeContinuousAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'DateTimeContinuousAxis'
                }]
        }], ctorParameters: function () { return []; } });
export class LogarithmicAxisDirective {
    constructor() { }
}
LogarithmicAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: LogarithmicAxisDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
LogarithmicAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: LogarithmicAxisDirective, selector: "LogarithmicAxis", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: LogarithmicAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'LogarithmicAxis'
                }]
        }], ctorParameters: function () { return []; } });
export class LineSeriesDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
LineSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: LineSeriesDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
LineSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: LineSeriesDirective, selector: "LineSeries", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: LineSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'LineSeries'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class AreaSeriesDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
AreaSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: AreaSeriesDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
AreaSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: AreaSeriesDirective, selector: "AreaSeries", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: AreaSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'AreaSeries'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class SplineSeriesDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
SplineSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: SplineSeriesDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
SplineSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: SplineSeriesDirective, selector: "SplineSeries", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: SplineSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'SplineSeries'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class SplineAreaSeriesDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
SplineAreaSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: SplineAreaSeriesDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
SplineAreaSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: SplineAreaSeriesDirective, selector: "SplineAreaSeries", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: SplineAreaSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'SplineAreaSeries'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class BarSeriesDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
BarSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: BarSeriesDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
BarSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: BarSeriesDirective, selector: "BarSeries", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: BarSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'BarSeries'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class RangeBarSeriesDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
RangeBarSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: RangeBarSeriesDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
RangeBarSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: RangeBarSeriesDirective, selector: "RangeBarSeries", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: RangeBarSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'RangeBarSeries'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class BubbleSeriesDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
BubbleSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: BubbleSeriesDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
BubbleSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: BubbleSeriesDirective, selector: "BubbleSeries", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: BubbleSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'BubbleSeries'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class ScatterBubbleSeriesDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
ScatterBubbleSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: ScatterBubbleSeriesDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
ScatterBubbleSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: ScatterBubbleSeriesDirective, selector: "ScatterBubbleSeries", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: ScatterBubbleSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ScatterBubbleSeries'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class ScatterSeriesDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
ScatterSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: ScatterSeriesDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
ScatterSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: ScatterSeriesDirective, selector: "ScatterSeries", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: ScatterSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ScatterSeries'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class PaletteDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
PaletteDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: PaletteDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
PaletteDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: PaletteDirective, selector: "Palette", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: PaletteDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'Palette'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class PieSeriesDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
PieSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: PieSeriesDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
PieSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: PieSeriesDirective, selector: "PieSeries", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: PieSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'PieSeries'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class DonutSeriesDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
DonutSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: DonutSeriesDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
DonutSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: DonutSeriesDirective, selector: "DonutSeries", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: DonutSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'DonutSeries'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class CandlestickSeriesDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
CandlestickSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: CandlestickSeriesDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
CandlestickSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: CandlestickSeriesDirective, selector: "CandlestickSeries", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: CandlestickSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'CandlestickSeries'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class OhlcSeriesDirective extends SeriesComponentBase {
    constructor(_elementRef) {
        super();
        this._elementRef = _elementRef;
        this._nativeSeries = this._elementRef.nativeElement;
    }
}
OhlcSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: OhlcSeriesDirective, deps: [{ token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
OhlcSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: OhlcSeriesDirective, selector: "OhlcSeries", usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: OhlcSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'OhlcSeries'
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class RadCartesianChartGridDirective {
    constructor() { }
}
RadCartesianChartGridDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: RadCartesianChartGridDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
RadCartesianChartGridDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: RadCartesianChartGridDirective, selector: "RadCartesianChartGrid", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: RadCartesianChartGridDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'RadCartesianChartGrid'
                }]
        }], ctorParameters: function () { return []; } });
export class ChartGridLineAnnotationDirective {
    constructor() { }
}
ChartGridLineAnnotationDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: ChartGridLineAnnotationDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
ChartGridLineAnnotationDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: ChartGridLineAnnotationDirective, selector: "ChartGridLineAnnotation", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: ChartGridLineAnnotationDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ChartGridLineAnnotation'
                }]
        }], ctorParameters: function () { return []; } });
export class ChartPlotBandAnnotationDirective {
    constructor() { }
}
ChartPlotBandAnnotationDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: ChartPlotBandAnnotationDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
ChartPlotBandAnnotationDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: ChartPlotBandAnnotationDirective, selector: "ChartPlotBandAnnotation", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: ChartPlotBandAnnotationDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'ChartPlotBandAnnotation'
                }]
        }], ctorParameters: function () { return []; } });
export class TrackballDirective {
    constructor() { }
}
TrackballDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TrackballDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
TrackballDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TrackballDirective, selector: "Trackball", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TrackballDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'Trackball'
                }]
        }], ctorParameters: function () { return []; } });
export class PointLabelStyleDirective {
    constructor() { }
}
PointLabelStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: PointLabelStyleDirective, deps: [], target: i0.ɵɵFactoryTarget.Directive });
PointLabelStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: PointLabelStyleDirective, selector: "PointLabelStyle", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: PointLabelStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: 'PointLabelStyle'
                }]
        }], ctorParameters: function () { return []; } });
export class TKPieLabelStyleDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const labelStyle = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.labelStyle = labelStyle;
    }
}
TKPieLabelStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKPieLabelStyleDirective, deps: [{ token: PieSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKPieLabelStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKPieLabelStyleDirective, selector: "[tkPieLabelStyle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKPieLabelStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkPieLabelStyle]'
                }]
        }], ctorParameters: function () { return [{ type: PieSeriesDirective, decorators: [{
                    type: Inject,
                    args: [PieSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKDonutLabelStyleDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const labelStyle = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.labelStyle = labelStyle;
    }
}
TKDonutLabelStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKDonutLabelStyleDirective, deps: [{ token: DonutSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKDonutLabelStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKDonutLabelStyleDirective, selector: "[tkDonutLabelStyle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKDonutLabelStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkDonutLabelStyle]'
                }]
        }], ctorParameters: function () { return [{ type: DonutSeriesDirective, decorators: [{
                    type: Inject,
                    args: [DonutSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKLineLabelStyleDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const labelStyle = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.labelStyle = labelStyle;
    }
}
TKLineLabelStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKLineLabelStyleDirective, deps: [{ token: LineSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKLineLabelStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKLineLabelStyleDirective, selector: "[tkLineLabelStyle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKLineLabelStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkLineLabelStyle]'
                }]
        }], ctorParameters: function () { return [{ type: LineSeriesDirective, decorators: [{
                    type: Inject,
                    args: [LineSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKBarLabelStyleDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const labelStyle = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.labelStyle = labelStyle;
    }
}
TKBarLabelStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKBarLabelStyleDirective, deps: [{ token: BarSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKBarLabelStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKBarLabelStyleDirective, selector: "[tkBarLabelStyle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKBarLabelStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkBarLabelStyle]'
                }]
        }], ctorParameters: function () { return [{ type: BarSeriesDirective, decorators: [{
                    type: Inject,
                    args: [BarSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKRangeBarLabelStyleDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const labelStyle = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.labelStyle = labelStyle;
    }
}
TKRangeBarLabelStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKRangeBarLabelStyleDirective, deps: [{ token: RangeBarSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKRangeBarLabelStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKRangeBarLabelStyleDirective, selector: "[tkRangeBarLabelStyle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKRangeBarLabelStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkRangeBarLabelStyle]'
                }]
        }], ctorParameters: function () { return [{ type: RangeBarSeriesDirective, decorators: [{
                    type: Inject,
                    args: [RangeBarSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKAreaLabelStyleDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const labelStyle = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.labelStyle = labelStyle;
    }
}
TKAreaLabelStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKAreaLabelStyleDirective, deps: [{ token: AreaSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKAreaLabelStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKAreaLabelStyleDirective, selector: "[tkAreaLabelStyle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKAreaLabelStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkAreaLabelStyle]'
                }]
        }], ctorParameters: function () { return [{ type: AreaSeriesDirective, decorators: [{
                    type: Inject,
                    args: [AreaSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKSplineLabelStyleDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const labelStyle = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.labelStyle = labelStyle;
    }
}
TKSplineLabelStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKSplineLabelStyleDirective, deps: [{ token: SplineSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKSplineLabelStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKSplineLabelStyleDirective, selector: "[tkSplineLabelStyle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKSplineLabelStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkSplineLabelStyle]'
                }]
        }], ctorParameters: function () { return [{ type: SplineSeriesDirective, decorators: [{
                    type: Inject,
                    args: [SplineSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKSplineAreaLabelStyleDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const labelStyle = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.labelStyle = labelStyle;
    }
}
TKSplineAreaLabelStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKSplineAreaLabelStyleDirective, deps: [{ token: SplineAreaSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKSplineAreaLabelStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKSplineAreaLabelStyleDirective, selector: "[tkSplineAreaLabelStyle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKSplineAreaLabelStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkSplineAreaLabelStyle]'
                }]
        }], ctorParameters: function () { return [{ type: SplineAreaSeriesDirective, decorators: [{
                    type: Inject,
                    args: [SplineAreaSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKBubbleLabelStyleDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const labelStyle = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.labelStyle = labelStyle;
    }
}
TKBubbleLabelStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKBubbleLabelStyleDirective, deps: [{ token: BubbleSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKBubbleLabelStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKBubbleLabelStyleDirective, selector: "[tkBubbleLabelStyle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKBubbleLabelStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkBubbleLabelStyle]'
                }]
        }], ctorParameters: function () { return [{ type: BubbleSeriesDirective, decorators: [{
                    type: Inject,
                    args: [BubbleSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKScatterBubbleLabelStyleDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const labelStyle = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.labelStyle = labelStyle;
    }
}
TKScatterBubbleLabelStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKScatterBubbleLabelStyleDirective, deps: [{ token: ScatterBubbleSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKScatterBubbleLabelStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKScatterBubbleLabelStyleDirective, selector: "[tkScatterBubbleLabelStyle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKScatterBubbleLabelStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkScatterBubbleLabelStyle]'
                }]
        }], ctorParameters: function () { return [{ type: ScatterBubbleSeriesDirective, decorators: [{
                    type: Inject,
                    args: [ScatterBubbleSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKCandlestickLabelStyleDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const labelStyle = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.labelStyle = labelStyle;
    }
}
TKCandlestickLabelStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCandlestickLabelStyleDirective, deps: [{ token: CandlestickSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKCandlestickLabelStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKCandlestickLabelStyleDirective, selector: "[tkCandlestickLabelStyle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCandlestickLabelStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkCandlestickLabelStyle]'
                }]
        }], ctorParameters: function () { return [{ type: CandlestickSeriesDirective, decorators: [{
                    type: Inject,
                    args: [CandlestickSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKOhlcStyleDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const labelStyle = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.labelStyle = labelStyle;
    }
}
TKOhlcStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKOhlcStyleDirective, deps: [{ token: OhlcSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKOhlcStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKOhlcStyleDirective, selector: "[tkOhlcLabelStyle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKOhlcStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkOhlcLabelStyle]'
                }]
        }], ctorParameters: function () { return [{ type: OhlcSeriesDirective, decorators: [{
                    type: Inject,
                    args: [OhlcSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKScatterStyleDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const labelStyle = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.labelStyle = labelStyle;
    }
}
TKScatterStyleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKScatterStyleDirective, deps: [{ token: ScatterSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKScatterStyleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKScatterStyleDirective, selector: "[tkScatterLabelStyle]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKScatterStyleDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkScatterLabelStyle]'
                }]
        }], ctorParameters: function () { return [{ type: ScatterSeriesDirective, decorators: [{
                    type: Inject,
                    args: [ScatterSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKCartesianGridDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const grid = this._elementRef.nativeElement;
        const cartesianChart = this.owner.cartesianChart;
        cartesianChart.grid = grid;
    }
}
TKCartesianGridDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianGridDirective, deps: [{ token: RadCartesianChartComponent }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKCartesianGridDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKCartesianGridDirective, selector: "[tkCartesianGrid]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianGridDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkCartesianGrid]'
                }]
        }], ctorParameters: function () { return [{ type: RadCartesianChartComponent, decorators: [{
                    type: Inject,
                    args: [RadCartesianChartComponent]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKCartesianSeriesDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const series = this._elementRef.nativeElement;
        if (this.owner.cartesianChart.series) {
            this.owner.cartesianChart.series.push(series);
        }
        else {
            this.owner.cartesianChart.series = new ObservableArray([series]);
        }
    }
}
TKCartesianSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianSeriesDirective, deps: [{ token: RadCartesianChartComponent }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKCartesianSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKCartesianSeriesDirective, selector: "[tkCartesianSeries]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkCartesianSeries]'
                }]
        }], ctorParameters: function () { return [{ type: RadCartesianChartComponent, decorators: [{
                    type: Inject,
                    args: [RadCartesianChartComponent]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKPieChartSeriesDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const series = this._elementRef.nativeElement;
        if (this.owner.pieChart.series) {
            this.owner.pieChart.series.push(series);
        }
        else {
            this.owner.pieChart.series = new ObservableArray([series]);
        }
    }
}
TKPieChartSeriesDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKPieChartSeriesDirective, deps: [{ token: RadPieChartComponent }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKPieChartSeriesDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKPieChartSeriesDirective, selector: "[tkPieSeries]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKPieChartSeriesDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkPieSeries]'
                }]
        }], ctorParameters: function () { return [{ type: RadPieChartComponent, decorators: [{
                    type: Inject,
                    args: [RadPieChartComponent]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKCartesianPaletteDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        this._nativePalette = this._elementRef.nativeElement;
        if (this.owner.cartesianChart.palettes) {
            this.owner.cartesianChart.palettes.push(this._nativePalette);
        }
        else {
            this.owner.cartesianChart.palettes = new ObservableArray([this._nativePalette]);
        }
    }
    get nativePalette() {
        return this._nativePalette;
    }
}
TKCartesianPaletteDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianPaletteDirective, deps: [{ token: RadCartesianChartComponent }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKCartesianPaletteDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKCartesianPaletteDirective, selector: "[tkCartesianPalette]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianPaletteDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkCartesianPalette]'
                }]
        }], ctorParameters: function () { return [{ type: RadCartesianChartComponent, decorators: [{
                    type: Inject,
                    args: [RadCartesianChartComponent]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKPiePaletteDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        this._nativePalette = this._elementRef.nativeElement;
        if (this.owner.pieChart.palettes) {
            this.owner.pieChart.palettes.push(this._nativePalette);
        }
        else {
            this.owner.pieChart.palettes = new ObservableArray([this._nativePalette]);
        }
    }
    get nativePalette() {
        return this._nativePalette;
    }
}
TKPiePaletteDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKPiePaletteDirective, deps: [{ token: RadPieChartComponent }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKPiePaletteDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKPiePaletteDirective, selector: "[tkPiePalette]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKPiePaletteDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkPiePalette]'
                }]
        }], ctorParameters: function () { return [{ type: RadPieChartComponent, decorators: [{
                    type: Inject,
                    args: [RadPieChartComponent]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKCartesianPaletteEntryDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const entry = this._elementRef.nativeElement;
        if (this.owner.nativePalette.entries) {
            this.owner.nativePalette.entries.push(entry);
            this.owner.nativePalette.updateOwner();
        }
        else {
            this.owner.nativePalette.entries = new ObservableArray([entry]);
        }
    }
}
TKCartesianPaletteEntryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianPaletteEntryDirective, deps: [{ token: TKCartesianPaletteDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKCartesianPaletteEntryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKCartesianPaletteEntryDirective, selector: "[tkCartesianPaletteEntry]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianPaletteEntryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkCartesianPaletteEntry]'
                }]
        }], ctorParameters: function () { return [{ type: TKCartesianPaletteDirective, decorators: [{
                    type: Inject,
                    args: [TKCartesianPaletteDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKPiePaletteEntryDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const entry = this._elementRef.nativeElement;
        if (this.owner.nativePalette.entries) {
            this.owner.nativePalette.entries.push(entry);
            this.owner.nativePalette.updateOwner();
        }
        else {
            this.owner.nativePalette.entries = new ObservableArray([entry]);
        }
    }
}
TKPiePaletteEntryDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKPiePaletteEntryDirective, deps: [{ token: TKPiePaletteDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKPiePaletteEntryDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKPiePaletteEntryDirective, selector: "[tkPiePaletteEntry]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKPiePaletteEntryDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkPiePaletteEntry]'
                }]
        }], ctorParameters: function () { return [{ type: TKPiePaletteDirective, decorators: [{
                    type: Inject,
                    args: [TKPiePaletteDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKCartesianHorizontalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const axis = this._elementRef.nativeElement;
        const cartesianChart = this.owner.cartesianChart;
        cartesianChart.horizontalAxis = axis;
    }
}
TKCartesianHorizontalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianHorizontalAxisDirective, deps: [{ token: RadCartesianChartComponent }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKCartesianHorizontalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKCartesianHorizontalAxisDirective, selector: "[tkCartesianHorizontalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianHorizontalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkCartesianHorizontalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: RadCartesianChartComponent, decorators: [{
                    type: Inject,
                    args: [RadCartesianChartComponent]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKCartesianVerticalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const axis = this._elementRef.nativeElement;
        const cartesianChart = this.owner.cartesianChart;
        cartesianChart.verticalAxis = axis;
    }
}
TKCartesianVerticalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianVerticalAxisDirective, deps: [{ token: RadCartesianChartComponent }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKCartesianVerticalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKCartesianVerticalAxisDirective, selector: "[tkCartesianVerticalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianVerticalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkCartesianVerticalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: RadCartesianChartComponent, decorators: [{
                    type: Inject,
                    args: [RadCartesianChartComponent]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKLineVerticalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const verticalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.verticalAxis = verticalAxis;
    }
}
TKLineVerticalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKLineVerticalAxisDirective, deps: [{ token: LineSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKLineVerticalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKLineVerticalAxisDirective, selector: "[tkLineVerticalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKLineVerticalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkLineVerticalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: LineSeriesDirective, decorators: [{
                    type: Inject,
                    args: [LineSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKLineHorizontalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const horizontalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.horizontalAxis = horizontalAxis;
    }
}
TKLineHorizontalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKLineHorizontalAxisDirective, deps: [{ token: LineSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKLineHorizontalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKLineHorizontalAxisDirective, selector: "[tkLineHorizontalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKLineHorizontalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkLineHorizontalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: LineSeriesDirective, decorators: [{
                    type: Inject,
                    args: [LineSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKBarVerticalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const verticalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.verticalAxis = verticalAxis;
    }
}
TKBarVerticalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKBarVerticalAxisDirective, deps: [{ token: BarSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKBarVerticalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKBarVerticalAxisDirective, selector: "[tkBarVerticalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKBarVerticalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkBarVerticalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: BarSeriesDirective, decorators: [{
                    type: Inject,
                    args: [BarSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKBarHorizontalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const horizontalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.horizontalAxis = horizontalAxis;
    }
}
TKBarHorizontalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKBarHorizontalAxisDirective, deps: [{ token: BarSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKBarHorizontalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKBarHorizontalAxisDirective, selector: "[tkBarHorizontalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKBarHorizontalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkBarHorizontalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: BarSeriesDirective, decorators: [{
                    type: Inject,
                    args: [BarSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKRangeBarVerticalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const verticalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.verticalAxis = verticalAxis;
    }
}
TKRangeBarVerticalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKRangeBarVerticalAxisDirective, deps: [{ token: RangeBarSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKRangeBarVerticalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKRangeBarVerticalAxisDirective, selector: "[tkRangeBarVerticalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKRangeBarVerticalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkRangeBarVerticalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: RangeBarSeriesDirective, decorators: [{
                    type: Inject,
                    args: [RangeBarSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKRangeBarHorizontalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const horizontalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.horizontalAxis = horizontalAxis;
    }
}
TKRangeBarHorizontalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKRangeBarHorizontalAxisDirective, deps: [{ token: RangeBarSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKRangeBarHorizontalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKRangeBarHorizontalAxisDirective, selector: "[tkRangeBarHorizontalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKRangeBarHorizontalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkRangeBarHorizontalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: RangeBarSeriesDirective, decorators: [{
                    type: Inject,
                    args: [RangeBarSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKAreaVerticalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const verticalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.verticalAxis = verticalAxis;
    }
}
TKAreaVerticalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKAreaVerticalAxisDirective, deps: [{ token: AreaSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKAreaVerticalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKAreaVerticalAxisDirective, selector: "[tkAreaVerticalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKAreaVerticalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkAreaVerticalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: AreaSeriesDirective, decorators: [{
                    type: Inject,
                    args: [AreaSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKAreaHorizontalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const horizontalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.horizontalAxis = horizontalAxis;
    }
}
TKAreaHorizontalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKAreaHorizontalAxisDirective, deps: [{ token: AreaSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKAreaHorizontalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKAreaHorizontalAxisDirective, selector: "[tkAreaHorizontalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKAreaHorizontalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkAreaHorizontalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: AreaSeriesDirective, decorators: [{
                    type: Inject,
                    args: [AreaSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKSplineVerticalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const verticalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.verticalAxis = verticalAxis;
    }
}
TKSplineVerticalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKSplineVerticalAxisDirective, deps: [{ token: SplineSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKSplineVerticalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKSplineVerticalAxisDirective, selector: "[tkSplineVerticalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKSplineVerticalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkSplineVerticalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: SplineSeriesDirective, decorators: [{
                    type: Inject,
                    args: [SplineSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKSplineHorizontalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const horizontalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.horizontalAxis = horizontalAxis;
    }
}
TKSplineHorizontalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKSplineHorizontalAxisDirective, deps: [{ token: SplineSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKSplineHorizontalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKSplineHorizontalAxisDirective, selector: "[tkSplineHorizontalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKSplineHorizontalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkSplineHorizontalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: SplineSeriesDirective, decorators: [{
                    type: Inject,
                    args: [SplineSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKSplineAreaVerticalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const verticalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.verticalAxis = verticalAxis;
    }
}
TKSplineAreaVerticalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKSplineAreaVerticalAxisDirective, deps: [{ token: SplineAreaSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKSplineAreaVerticalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKSplineAreaVerticalAxisDirective, selector: "[tkSplineAreaVerticalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKSplineAreaVerticalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkSplineAreaVerticalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: SplineAreaSeriesDirective, decorators: [{
                    type: Inject,
                    args: [SplineAreaSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKSplineAreaHorizontalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const horizontalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.horizontalAxis = horizontalAxis;
    }
}
TKSplineAreaHorizontalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKSplineAreaHorizontalAxisDirective, deps: [{ token: SplineAreaSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKSplineAreaHorizontalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKSplineAreaHorizontalAxisDirective, selector: "[tkSplineAreaHorizontalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKSplineAreaHorizontalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkSplineAreaHorizontalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: SplineAreaSeriesDirective, decorators: [{
                    type: Inject,
                    args: [SplineAreaSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKBubbleVerticalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const verticalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.verticalAxis = verticalAxis;
    }
}
TKBubbleVerticalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKBubbleVerticalAxisDirective, deps: [{ token: BubbleSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKBubbleVerticalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKBubbleVerticalAxisDirective, selector: "[tkBubbleVerticalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKBubbleVerticalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkBubbleVerticalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: BubbleSeriesDirective, decorators: [{
                    type: Inject,
                    args: [BubbleSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKBubbleHorizontalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const horizontalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.horizontalAxis = horizontalAxis;
    }
}
TKBubbleHorizontalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKBubbleHorizontalAxisDirective, deps: [{ token: BubbleSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKBubbleHorizontalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKBubbleHorizontalAxisDirective, selector: "[tkBubbleHorizontalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKBubbleHorizontalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkBubbleHorizontalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: BubbleSeriesDirective, decorators: [{
                    type: Inject,
                    args: [BubbleSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKScatterBubbleVerticalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const verticalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.verticalAxis = verticalAxis;
    }
}
TKScatterBubbleVerticalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKScatterBubbleVerticalAxisDirective, deps: [{ token: ScatterBubbleSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKScatterBubbleVerticalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKScatterBubbleVerticalAxisDirective, selector: "[tkScatterBubbleVerticalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKScatterBubbleVerticalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkScatterBubbleVerticalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: ScatterBubbleSeriesDirective, decorators: [{
                    type: Inject,
                    args: [ScatterBubbleSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKScatterBubbleHorizontalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const horizontalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.horizontalAxis = horizontalAxis;
    }
}
TKScatterBubbleHorizontalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKScatterBubbleHorizontalAxisDirective, deps: [{ token: ScatterBubbleSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKScatterBubbleHorizontalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKScatterBubbleHorizontalAxisDirective, selector: "[tkScatterBubbleHorizontalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKScatterBubbleHorizontalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkScatterBubbleHorizontalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: ScatterBubbleSeriesDirective, decorators: [{
                    type: Inject,
                    args: [ScatterBubbleSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKCandlestickVerticalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const verticalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.verticalAxis = verticalAxis;
    }
}
TKCandlestickVerticalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCandlestickVerticalAxisDirective, deps: [{ token: CandlestickSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKCandlestickVerticalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKCandlestickVerticalAxisDirective, selector: "[tkCandlestickVerticalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCandlestickVerticalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkCandlestickVerticalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: CandlestickSeriesDirective, decorators: [{
                    type: Inject,
                    args: [CandlestickSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKCandlestickHorizontalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const horizontalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.horizontalAxis = horizontalAxis;
    }
}
TKCandlestickHorizontalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCandlestickHorizontalAxisDirective, deps: [{ token: CandlestickSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKCandlestickHorizontalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKCandlestickHorizontalAxisDirective, selector: "[tkCandlestickHorizontalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCandlestickHorizontalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkCandlestickHorizontalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: CandlestickSeriesDirective, decorators: [{
                    type: Inject,
                    args: [CandlestickSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKOhlcVerticalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const verticalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.verticalAxis = verticalAxis;
    }
}
TKOhlcVerticalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKOhlcVerticalAxisDirective, deps: [{ token: OhlcSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKOhlcVerticalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKOhlcVerticalAxisDirective, selector: "[tkOhlcVerticalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKOhlcVerticalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkOhlcVerticalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: OhlcSeriesDirective, decorators: [{
                    type: Inject,
                    args: [OhlcSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKOhlcHorizontalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const horizontalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.horizontalAxis = horizontalAxis;
    }
}
TKOhlcHorizontalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKOhlcHorizontalAxisDirective, deps: [{ token: OhlcSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKOhlcHorizontalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKOhlcHorizontalAxisDirective, selector: "[tkOhlcHorizontalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKOhlcHorizontalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkOhlcHorizontalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: OhlcSeriesDirective, decorators: [{
                    type: Inject,
                    args: [OhlcSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKScatterVerticalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const verticalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.verticalAxis = verticalAxis;
    }
}
TKScatterVerticalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKScatterVerticalAxisDirective, deps: [{ token: ScatterSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKScatterVerticalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKScatterVerticalAxisDirective, selector: "[tkScatterVerticalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKScatterVerticalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkScatterVerticalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: ScatterSeriesDirective, decorators: [{
                    type: Inject,
                    args: [ScatterSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKScatterHorizontalAxisDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const horizontalAxis = this._elementRef.nativeElement;
        const series = this.owner.nativeSeries;
        series.horizontalAxis = horizontalAxis;
    }
}
TKScatterHorizontalAxisDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKScatterHorizontalAxisDirective, deps: [{ token: ScatterSeriesDirective }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKScatterHorizontalAxisDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKScatterHorizontalAxisDirective, selector: "[tkScatterHorizontalAxis]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKScatterHorizontalAxisDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkScatterHorizontalAxis]'
                }]
        }], ctorParameters: function () { return [{ type: ScatterSeriesDirective, decorators: [{
                    type: Inject,
                    args: [ScatterSeriesDirective]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKPieLegendDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const legend = this._elementRef.nativeElement;
        const pieChart = this.owner.pieChart;
        pieChart.legend = legend;
    }
}
TKPieLegendDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKPieLegendDirective, deps: [{ token: RadPieChartComponent }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKPieLegendDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKPieLegendDirective, selector: "[tkPieLegend]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKPieLegendDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkPieLegend]'
                }]
        }], ctorParameters: function () { return [{ type: RadPieChartComponent, decorators: [{
                    type: Inject,
                    args: [RadPieChartComponent]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKCartesianLegendDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const legend = this._elementRef.nativeElement;
        const cartesianChart = this.owner.cartesianChart;
        cartesianChart.legend = legend;
    }
}
TKCartesianLegendDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianLegendDirective, deps: [{ token: RadCartesianChartComponent }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKCartesianLegendDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKCartesianLegendDirective, selector: "[tkCartesianLegend]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianLegendDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkCartesianLegend]'
                }]
        }], ctorParameters: function () { return [{ type: RadCartesianChartComponent, decorators: [{
                    type: Inject,
                    args: [RadCartesianChartComponent]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKCartesianTrackballDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const trackball = this._elementRef.nativeElement;
        const cartesianChart = this.owner.cartesianChart;
        cartesianChart.trackball = trackball;
    }
}
TKCartesianTrackballDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianTrackballDirective, deps: [{ token: RadCartesianChartComponent }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKCartesianTrackballDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKCartesianTrackballDirective, selector: "[tkCartesianTrackball]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianTrackballDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkCartesianTrackball]'
                }]
        }], ctorParameters: function () { return [{ type: RadCartesianChartComponent, decorators: [{
                    type: Inject,
                    args: [RadCartesianChartComponent]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export class TKCartesianAnnotationsDirective {
    constructor(owner, _elementRef) {
        this.owner = owner;
        this._elementRef = _elementRef;
    }
    ngOnInit() {
        const annotation = this._elementRef.nativeElement;
        if (this.owner.cartesianChart.annotations) {
            this.owner.cartesianChart.annotations.push(annotation);
        }
        else {
            this.owner.cartesianChart.annotations = new ObservableArray([annotation]);
        }
    }
}
TKCartesianAnnotationsDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianAnnotationsDirective, deps: [{ token: RadCartesianChartComponent }, { token: ElementRef }], target: i0.ɵɵFactoryTarget.Directive });
TKCartesianAnnotationsDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.2.2", type: TKCartesianAnnotationsDirective, selector: "[tkCartesianAnnotations]", ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: TKCartesianAnnotationsDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[tkCartesianAnnotations]'
                }]
        }], ctorParameters: function () { return [{ type: RadCartesianChartComponent, decorators: [{
                    type: Inject,
                    args: [RadCartesianChartComponent]
                }] }, { type: i0.ElementRef, decorators: [{
                    type: Inject,
                    args: [ElementRef]
                }] }]; } });
export const CHART_DIRECTIVES = [
    RadCartesianChartComponent,
    RadPieChartComponent,
    LineSeriesDirective,
    AreaSeriesDirective,
    SplineSeriesDirective,
    SplineAreaSeriesDirective,
    BarSeriesDirective,
    RangeBarSeriesDirective,
    BubbleSeriesDirective,
    ScatterBubbleSeriesDirective,
    ScatterSeriesDirective,
    PieSeriesDirective,
    TKPieChartSeriesDirective,
    TKCartesianSeriesDirective,
    PieSeriesDirective,
    TKCartesianHorizontalAxisDirective,
    TKCartesianVerticalAxisDirective,
    LinearAxisDirective,
    DateTimeCategoricalAxisDirective,
    CategoricalAxisDirective,
    RadCartesianChartGridDirective,
    TKCartesianGridDirective,
    PaletteDirective,
    TKCartesianPaletteDirective,
    CandlestickSeriesDirective,
    OhlcSeriesDirective,
    RadLegendViewDirective,
    DonutSeriesDirective,
    TKPieLegendDirective,
    TKCartesianLegendDirective,
    ChartGridLineAnnotationDirective,
    TKCartesianAnnotationsDirective,
    ChartPlotBandAnnotationDirective,
    TKCartesianTrackballDirective,
    TrackballDirective,
    PointLabelStyleDirective,
    TKPieLabelStyleDirective,
    TKLineLabelStyleDirective,
    TKBarLabelStyleDirective,
    TKRangeBarLabelStyleDirective,
    TKAreaLabelStyleDirective,
    TKSplineLabelStyleDirective,
    TKBubbleLabelStyleDirective,
    TKScatterBubbleLabelStyleDirective,
    TKCandlestickLabelStyleDirective,
    TKOhlcStyleDirective,
    TKScatterStyleDirective,
    TKDonutLabelStyleDirective,
    DateTimeContinuousAxisDirective,
    TKCartesianPaletteEntryDirective,
    LogarithmicAxisDirective,
    TKLineVerticalAxisDirective,
    TKLineHorizontalAxisDirective,
    TKBarVerticalAxisDirective,
    TKBarHorizontalAxisDirective,
    TKRangeBarVerticalAxisDirective,
    TKRangeBarHorizontalAxisDirective,
    TKAreaVerticalAxisDirective,
    TKAreaHorizontalAxisDirective,
    TKSplineVerticalAxisDirective,
    TKSplineHorizontalAxisDirective,
    TKSplineAreaVerticalAxisDirective,
    TKSplineAreaHorizontalAxisDirective,
    TKBubbleVerticalAxisDirective,
    TKBubbleHorizontalAxisDirective,
    TKScatterBubbleVerticalAxisDirective,
    TKScatterBubbleHorizontalAxisDirective,
    TKCandlestickVerticalAxisDirective,
    TKCandlestickHorizontalAxisDirective,
    TKOhlcVerticalAxisDirective,
    TKOhlcHorizontalAxisDirective,
    TKScatterVerticalAxisDirective,
    TKScatterHorizontalAxisDirective,
    TKPiePaletteDirective,
    TKPiePaletteEntryDirective,
    TKSplineAreaLabelStyleDirective
];
registerElement('RadCartesianChart', () => chartModule.RadCartesianChart);
registerElement('RadPieChart', () => chartModule.RadPieChart);
registerElement('RadLegendView', () => chartModule.RadLegendView);
registerElement('LineSeries', () => chartModule.LineSeries);
registerElement('PieSeries', () => chartModule.PieSeries);
registerElement('DonutSeries', () => chartModule.DonutSeries);
registerElement('AreaSeries', () => chartModule.AreaSeries);
registerElement('CategoricalAxis', () => chartModule.CategoricalAxis);
registerElement('LinearAxis', () => chartModule.LinearAxis);
registerElement('DateTimeCategoricalAxis', () => chartModule.DateTimeCategoricalAxis);
registerElement('SplineSeries', () => chartModule.SplineSeries);
registerElement('BarSeries', () => chartModule.BarSeries);
registerElement('RangeBarSeries', () => chartModule.RangeBarSeries);
registerElement('BubbleSeries', () => chartModule.BubbleSeries);
registerElement('ScatterBubbleSeries', () => chartModule.ScatterBubbleSeries);
registerElement('ScatterSeries', () => chartModule.ScatterSeries);
registerElement('OhlcSeries', () => chartModule.OhlcSeries);
registerElement('CandlestickSeries', () => chartModule.CandlestickSeries);
registerElement('RadCartesianChartGrid', () => chartModule.RadCartesianChartGrid);
registerElement('Palette', () => chartModule.Palette);
registerElement('PaletteEntry', () => chartModule.PaletteEntry);
registerElement('ChartGridLineAnnotation', () => chartModule.ChartGridLineAnnotation);
registerElement('ChartPlotBandAnnotation', () => chartModule.ChartPlotBandAnnotation);
registerElement('Trackball', () => chartModule.Trackball);
registerElement('PointLabelStyle', () => chartModule.PointLabelStyle);
registerElement('DateTimeContinuousAxis', () => chartModule.DateTimeContinuousAxis);
registerElement('LogarithmicAxis', () => chartModule.LogarithmicAxis);
registerElement('SplineAreaSeries', () => chartModule.SplineAreaSeries);
export class NativeScriptUIChartModule {
}
NativeScriptUIChartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: NativeScriptUIChartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
NativeScriptUIChartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "15.2.2", ngImport: i0, type: NativeScriptUIChartModule, declarations: [RadCartesianChartComponent, RadPieChartComponent, LineSeriesDirective, AreaSeriesDirective, SplineSeriesDirective, SplineAreaSeriesDirective, BarSeriesDirective, RangeBarSeriesDirective, BubbleSeriesDirective, ScatterBubbleSeriesDirective, ScatterSeriesDirective, PieSeriesDirective, TKPieChartSeriesDirective, TKCartesianSeriesDirective, PieSeriesDirective, TKCartesianHorizontalAxisDirective, TKCartesianVerticalAxisDirective, LinearAxisDirective, DateTimeCategoricalAxisDirective, CategoricalAxisDirective, RadCartesianChartGridDirective, TKCartesianGridDirective, PaletteDirective, TKCartesianPaletteDirective, CandlestickSeriesDirective, OhlcSeriesDirective, RadLegendViewDirective, DonutSeriesDirective, TKPieLegendDirective, TKCartesianLegendDirective, ChartGridLineAnnotationDirective, TKCartesianAnnotationsDirective, ChartPlotBandAnnotationDirective, TKCartesianTrackballDirective, TrackballDirective, PointLabelStyleDirective, TKPieLabelStyleDirective, TKLineLabelStyleDirective, TKBarLabelStyleDirective, TKRangeBarLabelStyleDirective, TKAreaLabelStyleDirective, TKSplineLabelStyleDirective, TKBubbleLabelStyleDirective, TKScatterBubbleLabelStyleDirective, TKCandlestickLabelStyleDirective, TKOhlcStyleDirective, TKScatterStyleDirective, TKDonutLabelStyleDirective, DateTimeContinuousAxisDirective, TKCartesianPaletteEntryDirective, LogarithmicAxisDirective, TKLineVerticalAxisDirective, TKLineHorizontalAxisDirective, TKBarVerticalAxisDirective, TKBarHorizontalAxisDirective, TKRangeBarVerticalAxisDirective, TKRangeBarHorizontalAxisDirective, TKAreaVerticalAxisDirective, TKAreaHorizontalAxisDirective, TKSplineVerticalAxisDirective, TKSplineHorizontalAxisDirective, TKSplineAreaVerticalAxisDirective, TKSplineAreaHorizontalAxisDirective, TKBubbleVerticalAxisDirective, TKBubbleHorizontalAxisDirective, TKScatterBubbleVerticalAxisDirective, TKScatterBubbleHorizontalAxisDirective, TKCandlestickVerticalAxisDirective, TKCandlestickHorizontalAxisDirective, TKOhlcVerticalAxisDirective, TKOhlcHorizontalAxisDirective, TKScatterVerticalAxisDirective, TKScatterHorizontalAxisDirective, TKPiePaletteDirective, TKPiePaletteEntryDirective, TKSplineAreaLabelStyleDirective], exports: [RadCartesianChartComponent, RadPieChartComponent, LineSeriesDirective, AreaSeriesDirective, SplineSeriesDirective, SplineAreaSeriesDirective, BarSeriesDirective, RangeBarSeriesDirective, BubbleSeriesDirective, ScatterBubbleSeriesDirective, ScatterSeriesDirective, PieSeriesDirective, TKPieChartSeriesDirective, TKCartesianSeriesDirective, PieSeriesDirective, TKCartesianHorizontalAxisDirective, TKCartesianVerticalAxisDirective, LinearAxisDirective, DateTimeCategoricalAxisDirective, CategoricalAxisDirective, RadCartesianChartGridDirective, TKCartesianGridDirective, PaletteDirective, TKCartesianPaletteDirective, CandlestickSeriesDirective, OhlcSeriesDirective, RadLegendViewDirective, DonutSeriesDirective, TKPieLegendDirective, TKCartesianLegendDirective, ChartGridLineAnnotationDirective, TKCartesianAnnotationsDirective, ChartPlotBandAnnotationDirective, TKCartesianTrackballDirective, TrackballDirective, PointLabelStyleDirective, TKPieLabelStyleDirective, TKLineLabelStyleDirective, TKBarLabelStyleDirective, TKRangeBarLabelStyleDirective, TKAreaLabelStyleDirective, TKSplineLabelStyleDirective, TKBubbleLabelStyleDirective, TKScatterBubbleLabelStyleDirective, TKCandlestickLabelStyleDirective, TKOhlcStyleDirective, TKScatterStyleDirective, TKDonutLabelStyleDirective, DateTimeContinuousAxisDirective, TKCartesianPaletteEntryDirective, LogarithmicAxisDirective, TKLineVerticalAxisDirective, TKLineHorizontalAxisDirective, TKBarVerticalAxisDirective, TKBarHorizontalAxisDirective, TKRangeBarVerticalAxisDirective, TKRangeBarHorizontalAxisDirective, TKAreaVerticalAxisDirective, TKAreaHorizontalAxisDirective, TKSplineVerticalAxisDirective, TKSplineHorizontalAxisDirective, TKSplineAreaVerticalAxisDirective, TKSplineAreaHorizontalAxisDirective, TKBubbleVerticalAxisDirective, TKBubbleHorizontalAxisDirective, TKScatterBubbleVerticalAxisDirective, TKScatterBubbleHorizontalAxisDirective, TKCandlestickVerticalAxisDirective, TKCandlestickHorizontalAxisDirective, TKOhlcVerticalAxisDirective, TKOhlcHorizontalAxisDirective, TKScatterVerticalAxisDirective, TKScatterHorizontalAxisDirective, TKPiePaletteDirective, TKPiePaletteEntryDirective, TKSplineAreaLabelStyleDirective] });
NativeScriptUIChartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: NativeScriptUIChartModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.2", ngImport: i0, type: NativeScriptUIChartModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [CHART_DIRECTIVES],
                    exports: [CHART_DIRECTIVES]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,