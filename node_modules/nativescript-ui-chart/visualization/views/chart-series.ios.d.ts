import { Property, Color } from '@nativescript/core';
import * as seriesCommonModule from './chart-series.common';
import * as initializersCommon from '../../initializers/chart-initializers.common';
export declare class PieSeries extends seriesCommonModule.PieSeries {
    private _ios;
    get ios(): TKChartPieSeries;
    set ios(value: TKChartPieSeries);
}
export declare class DonutSeries extends seriesCommonModule.DonutSeries {
    private _ios;
    get ios(): TKChartDonutSeries;
    set ios(value: TKChartDonutSeries);
    updateOwnerChart(): void;
    protected get initializer(): initializersCommon.DonutSeriesValueMapper;
    protected onInnerRadiusFactorChanged(oldValue: any, newValue: any): void;
}
export declare class BarSeries extends seriesCommonModule.BarSeries {
    constructor();
    private _ios;
    get ios(): any;
    set ios(value: any);
    updateNative(): void;
}
export declare class RangeBarSeries extends seriesCommonModule.RangeBarSeries {
    constructor();
    protected get initializer(): initializersCommon.RangeBarSeriesValueMapper;
    private _ios;
    get ios(): any;
    set ios(value: any);
    updateNative(): void;
    protected onHighPropertyNameChanged(oldValue: string, newValue: string): void;
    protected onLowPropertyNameChanged(oldValue: string, newValue: string): void;
    protected onValuePropertyChanged(oldValue: string, newValue: string): void;
}
export declare class LineSeries extends seriesCommonModule.CategoricalSeries {
    constructor();
    protected get initializer(): initializersCommon.LineSeriesValueMapper;
    protected _ios: any;
    get ios(): any;
    set ios(value: any);
}
export declare class SplineSeries extends LineSeries {
    protected get initializer(): any;
}
export declare class AreaSeries extends LineSeries {
    protected get initializer(): any;
}
export declare class SplineAreaSeries extends AreaSeries {
    protected get initializer(): any;
}
export declare class BubbleSeries extends seriesCommonModule.BubbleSeries {
    private _ios;
    get ios(): TKChartBubbleSeries;
    set ios(value: TKChartBubbleSeries);
    protected get initializer(): initializersCommon.BubbleSeriesValueMapper;
    protected onBubbleScaleChanged(oldValue: number, newValue: number): void;
    protected onBubbleSizePropertyChanged(oldValue: string, newValue: string): void;
}
export declare class ScatterSeries extends seriesCommonModule.ScatterSeries {
    protected _ios: TKChartScatterSeries;
    get ios(): TKChartScatterSeries;
    set ios(value: TKChartScatterSeries);
}
export declare class ScatterBubbleSeries extends seriesCommonModule.ScatterBubbleSeries {
    private _ios;
    get ios(): TKChartBubbleSeries;
    set ios(value: TKChartBubbleSeries);
}
export declare class OhlcSeries extends seriesCommonModule.OhlcSeries {
    private _series;
    get ios(): TKChartOhlcSeries;
    set ios(value: TKChartOhlcSeries);
    protected get initializer(): initializersCommon.OhlcSeriesValueMapper;
    protected onHighPropertyNameChanged(oldValue: string, newValue: string): void;
    protected onLowPropertyNameChanged(oldValue: string, newValue: string): void;
    protected onOpenPropertyNameChanged(oldValue: string, newValue: string): void;
    protected onClosePropertyNameChanged(oldValue: string, newValue: string): void;
    protected onValuePropertyChanged(oldValue: string, newValue: string): void;
}
export declare class CandlestickSeries extends OhlcSeries {
    fillColors: Color[];
    private _ios;
    get ios(): TKChartCandlestickSeries;
    set ios(value: TKChartCandlestickSeries);
    static fillColorsProperty: Property<CandlestickSeries, Color[]>;
    private onFillColorsPropertyChanged;
    protected onFillColorsChanged(oldValue: Color[], newValue: Color[]): void;
    protected get initializer(): initializersCommon.CandlestickSeriesValueMapper;
}
