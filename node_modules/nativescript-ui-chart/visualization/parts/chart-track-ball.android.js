import * as trackBallModule from './chart-track-ball.common';
import { ChartTrackballSnapMode } from '../../misc/chart-public-enum';
export class Trackball extends trackBallModule.Trackball {
    constructor() {
        super();
    }
    // private _android: com.telerik.widget.chart.visualization.behaviors.ChartTrackBallBehavior;
    get android() {
        return this._android;
    }
    set android(value) {
        if (this._android) {
            this.unwireContentProviderCallback();
        }
        this._android = value;
        this.wireContentProviderCallback();
        this.updateTrackballSnapMode(this.snapMode);
        this.updateShowIntrsectionPoints(this.showIntersectionPoints);
    }
    unwireContentProviderCallback() {
        this._customProviderImpl = undefined;
        this.android.setCustomContentProvider(null);
    }
    wireContentProviderCallback() {
        let that = new WeakRef(this);
        this._customProviderImpl = new com.telerik.widget.chart.visualization.behaviors.ChartTrackballContentAdapter.ChartTrackBallContentProvider({
            resolveContentForDataPoint: function (point) {
                debugger;
                let chartSeries = that.get()._owner.series.getItem ? that.get()._owner.series.getItem(point.parent.index()) : that.get()._owner.series[point.parent.index()];
                let eventData = {
                    eventName: Trackball.trackBallContentRequestedEvent,
                    pointIndex: point.index(),
                    seriesIndex: point.parent.index(),
                    series: chartSeries,
                    pointData: chartSeries.getItemAtIndex(point.index()),
                    object: that.get(),
                    content: undefined
                };
                that.get().notify(eventData);
                if (eventData.content) {
                    return eventData.content;
                }
                return null;
            },
            resolveCustomViewForDataPoint: function (point) {
                return undefined;
            }
        });
        this.android.setCustomContentProvider(this._customProviderImpl);
    }
    onSnapModeChanged(oldValue, newValue) {
        if (!this._android) {
            return;
        }
        this.updateTrackballSnapMode(newValue);
    }
    onShowIntersectionPointsChanged(oldValue, newValue) {
        if (!this._android) {
            return;
        }
        this.updateShowIntrsectionPoints(newValue);
    }
    updateShowIntrsectionPoints(value) {
        this._android.setShowIntersectionPoints(value);
    }
    updateTrackballSnapMode(snapMode) {
        if (snapMode === ChartTrackballSnapMode.ClosestPoint) {
            this.android.setSnapMode(com.telerik.widget.chart.visualization.behaviors.TrackBallSnapMode.CLOSEST_POINT);
        }
        else if (snapMode === ChartTrackballSnapMode.AllClosestPoints) {
            this.android.setSnapMode(com.telerik.widget.chart.visualization.behaviors.TrackBallSnapMode.ALL_CLOSE_POINTS);
        }
    }
}
//# sourceMappingURL=chart-track-ball.android.js.map