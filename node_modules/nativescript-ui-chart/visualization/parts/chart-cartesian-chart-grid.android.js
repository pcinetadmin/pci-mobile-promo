import { Utils } from "@nativescript/core";
import * as cartesianChartGridModule from "./chart-cartesian-chart-grid.common";
export class RadCartesianChartGrid extends cartesianChartGridModule.RadCartesianChartGrid {
    constructor() {
        super();
        this._android = new com.telerik.widget.chart.visualization.cartesianChart.CartesianChartGrid();
        this._android.setCanApplyPalette(false);
    }
    onVerticalLinesVisibleChanged(oldValue, newValue) {
        if (newValue === true) {
            if (this.horizontalLinesVisible === true) {
                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.XY);
            }
            else {
                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.X);
            }
        }
        else {
            if (this.horizontalLinesVisible === true) {
                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.Y);
            }
            else {
                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.NONE);
            }
        }
    }
    onHorizontalLinesVisibleChanged(oldValue, newValue) {
        if (newValue === true) {
            if (this.verticalLinesVisible === true) {
                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.XY);
            }
            else {
                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.Y);
            }
        }
        else {
            if (this.verticalLinesVisible === true) {
                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.X);
            }
            else {
                this._android.setMajorLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.NONE);
            }
        }
    }
    onHorizontalStripLinesVisibleChanged(oldValue, newValue) {
        if (newValue === true) {
            if (this.verticalStripLinesVisible === true) {
                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.XY);
            }
            else {
                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.Y);
            }
        }
        else {
            if (this.verticalStripLinesVisible === true) {
                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.X);
            }
            else {
                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.NONE);
            }
        }
    }
    onVerticalStripLinesVisibleChanged(oldValue, newValue) {
        if (newValue === true) {
            if (this.horizontalStripLinesVisible === true) {
                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.XY);
            }
            else {
                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.X);
            }
        }
        else {
            if (this.horizontalStripLinesVisible === true) {
                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.Y);
            }
            else {
                this._android.setStripLinesVisibility(com.telerik.widget.chart.visualization.cartesianChart.GridLineVisibility.NONE);
            }
        }
    }
    onVerticalStrokeColorChanged(oldValue, newValue) {
        if (newValue) {
            if (newValue instanceof Array) {
                this._android.setVerticalLineColor(newValue[0].android);
            }
            else {
                this._android.setVerticalLineColor(newValue.android);
            }
            this._android.requestRender();
        }
    }
    onHorizontalStrokeColorChanged(oldValue, newValue) {
        if (newValue) {
            if (newValue instanceof Array) {
                this._android.setLineColor(newValue[0].android);
            }
            else {
                this._android.setLineColor(newValue.android);
            }
            this._android.requestRender();
        }
    }
    onHorizontalStrokeWidthChanged(oldValue, newValue) {
        if (!isNaN(+newValue)) {
            this._android.setLineThickness(newValue * Utils.layout.getDisplayDensity());
            this._android.requestRender();
        }
    }
    onVerticalStrokeWidthChanged(oldValue, newValue) {
        if (!isNaN(+newValue)) {
            this._android.setVerticalLineThickness(newValue * Utils.layout.getDisplayDensity());
            this._android.requestRender();
        }
    }
    onVerticalStripLineColorChanged(oldValue, newValue) {
        if (!newValue) {
            return;
        }
        this._android.getXStripeBrushes().clear();
        if (newValue instanceof Array) {
            for (let i = 0; i < newValue.length; i++) {
                let stripePaint = new android.graphics.Paint();
                stripePaint.setStyle(android.graphics.Paint.Style.FILL);
                stripePaint.setColor(newValue[i].android);
                this._android.getXStripeBrushes().add(stripePaint);
            }
        }
        else {
            let stripePaint = new android.graphics.Paint();
            stripePaint.setStyle(android.graphics.Paint.Style.FILL);
            stripePaint.setColor(newValue.android);
            this._android.getXStripeBrushes().add(stripePaint);
        }
        this._android.requestRender();
    }
    onHorizontalStripLineColorChanged(oldValue, newValue) {
        if (!newValue) {
            return;
        }
        this._android.getYStripeBrushes().clear();
        if (newValue instanceof Array) {
            for (let i = 0; i < newValue.length; i++) {
                let stripePaint = new android.graphics.Paint();
                stripePaint.setStyle(android.graphics.Paint.Style.FILL);
                stripePaint.setColor(newValue[i].android);
                this._android.getYStripeBrushes().add(stripePaint);
            }
        }
        else {
            let stripePaint = new android.graphics.Paint();
            stripePaint.setStyle(android.graphics.Paint.Style.FILL);
            stripePaint.setColor(newValue.android);
            this._android.getYStripeBrushes().add(stripePaint);
        }
        this._android.requestRender();
    }
}
//# sourceMappingURL=chart-cartesian-chart-grid.android.js.map