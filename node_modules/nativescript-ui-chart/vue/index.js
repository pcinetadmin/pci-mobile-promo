import { ObservableArray } from '@nativescript/core';
import { RadCartesianChart, RadPieChart, RangeBarSeries, BubbleSeries, SplineAreaSeries, LogarithmicAxis, DateTimeContinuousAxis, OhlcSeries, Trackball, PointLabelStyle, ChartPlotBandAnnotation, ChartGridLineAnnotation, PaletteEntry, Palette, RadCartesianChartGrid, CandlestickSeries, ScatterBubbleSeries, ScatterSeries, RadLegendView, LineSeries, PieSeries, DonutSeries, AreaSeries, CategoricalAxis, LinearAxis, DateTimeCategoricalAxis, SplineSeries, BarSeries } from './..';
const RadChartPlugin = {
    install(Vue, options) {
        Vue.registerElement('RadCartesianChart', () => RadCartesianChart);
        Vue.registerElement('RadPieChart', () => RadPieChart);
        Vue.registerElement('RadLegendView', () => RadLegendView);
        Vue.registerElement('LineSeries', () => LineSeries);
        Vue.registerElement('PieSeries', () => PieSeries);
        Vue.registerElement('DonutSeries', () => DonutSeries);
        Vue.registerElement('AreaSeries', () => AreaSeries);
        Vue.registerElement('CategoricalAxis', () => CategoricalAxis);
        Vue.registerElement('LinearAxis', () => LinearAxis);
        Vue.registerElement('DateTimeCategoricalAxis', () => DateTimeCategoricalAxis);
        Vue.registerElement('SplineSeries', () => SplineSeries);
        Vue.registerElement('BarSeries', () => BarSeries);
        Vue.registerElement('RangeBarSeries', () => RangeBarSeries);
        Vue.registerElement('BubbleSeries', () => BubbleSeries);
        Vue.registerElement('ScatterBubbleSeries', () => ScatterBubbleSeries);
        Vue.registerElement('ScatterSeries', () => ScatterSeries);
        Vue.registerElement('OhlcSeries', () => OhlcSeries);
        Vue.registerElement('CandlestickSeries', () => CandlestickSeries);
        Vue.registerElement('RadCartesianChartGrid', () => RadCartesianChartGrid);
        Vue.registerElement('Palette', () => Palette);
        Vue.registerElement('PaletteEntry', () => PaletteEntry);
        Vue.registerElement('ChartGridLineAnnotation', () => ChartGridLineAnnotation);
        Vue.registerElement('ChartPlotBandAnnotation', () => ChartPlotBandAnnotation);
        Vue.registerElement('Trackball', () => Trackball);
        Vue.registerElement('PointLabelStyle', () => PointLabelStyle);
        Vue.registerElement('DateTimeContinuousAxis', () => DateTimeContinuousAxis);
        Vue.registerElement('LogarithmicAxis', () => LogarithmicAxis);
        Vue.registerElement('SplineAreaSeries', () => SplineAreaSeries);
        let setHorizontalAxis = {
            inserted: function (el) {
                el.parentNode._nativeView.horizontalAxis = el._nativeView;
            }
        };
        Vue.directive('tkCartesianHorizontalAxis', setHorizontalAxis);
        Vue.directive('tkLineHorizontalAxis', setHorizontalAxis);
        Vue.directive('tkBarHorizontalAxis', setHorizontalAxis);
        Vue.directive('tkRangeBarHorizontalAxis', setHorizontalAxis);
        Vue.directive('tkAreaHorizontalAxis', setHorizontalAxis);
        Vue.directive('tkSplineHorizontalAxis', setHorizontalAxis);
        Vue.directive('tkSplineAreaHorizontalAxis', setHorizontalAxis);
        Vue.directive('tkBubbleHorizontalAxis', setHorizontalAxis);
        Vue.directive('tkScatterBubbleHorizontalAxis', setHorizontalAxis);
        Vue.directive('tkCandlestickHorizontalAxis', setHorizontalAxis);
        Vue.directive('tkOhlcHorizontalAxis', setHorizontalAxis);
        Vue.directive('tkScatterHorizontalAxis', setHorizontalAxis);
        let setVerticalAxis = {
            inserted: function (el) {
                el.parentNode._nativeView.verticalAxis = el._nativeView;
            }
        };
        Vue.directive('tkCartesianVerticalAxis', setVerticalAxis);
        Vue.directive('tkLineVerticalAxis', setVerticalAxis);
        Vue.directive('tkBarVerticalAxis', setVerticalAxis);
        Vue.directive('tkRangeBarVerticalAxis', setVerticalAxis);
        Vue.directive('tkAreaVerticalAxis', setVerticalAxis);
        Vue.directive('tkSplineVerticalAxis', setVerticalAxis);
        Vue.directive('tkSplineAreaVerticalAxis', setVerticalAxis);
        Vue.directive('tkBubbleVerticalAxis', setVerticalAxis);
        Vue.directive('tkScatterBubbleVerticalAxis', setVerticalAxis);
        Vue.directive('tkCandlestickVerticalAxis', setVerticalAxis);
        Vue.directive('tkOhlcVerticalAxis', setVerticalAxis);
        Vue.directive('tkScatterVerticalAxis', setVerticalAxis);
        let setSeries = {
            inserted: function (el) {
                let series = el._nativeView;
                let chart = el.parentNode._nativeView;
                if (chart.series) {
                    chart.series.push(series);
                }
                else {
                    chart.series = new ObservableArray([series]);
                }
            }
        };
        Vue.directive('tkCartesianSeries', setSeries);
        Vue.directive('tkPieSeries', setSeries);
        Vue.directive('tkCartesianGrid', {
            inserted: function (el) {
                el.parentNode._nativeView.grid = el._nativeView;
            }
        });
        let setPalette = {
            inserted: function (el) {
                let palette = el._nativeView;
                let chart = el.parentNode._nativeView;
                if (chart.palettes) {
                    chart.palettes.push(palette);
                }
                else {
                    chart.palettes = new ObservableArray([palette]);
                }
                el.childNodes.forEach(entry => {
                    if (entry._nativeView.typeName === 'PaletteEntry') {
                        if (palette.entries) {
                            palette.entries.push(entry._nativeView);
                            palette.updateOwner();
                        }
                        else {
                            palette.entries = new ObservableArray([entry._nativeView]);
                        }
                    }
                });
            }
        };
        Vue.directive('tkCartesianPalette', setPalette);
        Vue.directive('tkPiePalette', setPalette);
        let setEntry = {
            inserted: function (el) {
                let entry = el._nativeView;
                let palette = el.parentNode._nativeView;
                if (palette.entries) {
                    palette.entries.push(entry);
                    palette.updateOwner();
                }
                else {
                    palette.entries = new ObservableArray([entry]);
                }
            }
        };
        Vue.directive('tkCartesianPaletteEntry', setEntry);
        Vue.directive('tkPiePaletteEntry', setEntry);
        Vue.directive('tkCartesianAnnotations', {
            inserted: function (el) {
                let annotation = el._nativeView;
                let chart = el.parentNode._nativeView;
                if (chart.annotations) {
                    chart.annotations.push(annotation);
                }
                else {
                    chart.annotations = new ObservableArray([annotation]);
                }
            }
        });
        let setLabelStyle = {
            inserted: function (el) {
                el.parentNode._nativeView.labelStyle = el._nativeView;
            }
        };
        Vue.directive('tkPieLabelStyle', setLabelStyle);
        Vue.directive('tkDonutLabelStyle', setLabelStyle);
        Vue.directive('tkLineLabelStyle', setLabelStyle);
        Vue.directive('tkBarLabelStyle', setLabelStyle);
        Vue.directive('tkSplineAreaLabelStyle', setLabelStyle);
        Vue.directive('tkBubbleLabelStyle', setLabelStyle);
        Vue.directive('tkScatterBubbleLabelStyle', setLabelStyle);
        Vue.directive('tkCandlestickLabelStyle', setLabelStyle);
        Vue.directive('tkOhlcLabelStyle', setLabelStyle);
        Vue.directive('tkScatterLabelStyle', setLabelStyle);
        Vue.directive('tkRangeBarLabelStyle', setLabelStyle);
        Vue.directive('tkAreaLabelStyle', setLabelStyle);
        Vue.directive('tkSplineLabelStyle', setLabelStyle);
        let setLegend = {
            inserted: function (el) {
                el.parentNode._nativeView.legend = el._nativeView;
            }
        };
        Vue.directive('tkPieLegend', setLegend);
        Vue.directive('tkCartesianLegend', setLegend);
        Vue.directive('tkCartesianTrackball', {
            inserted: function (el) {
                el.parentNode._nativeView.trackball = el._nativeView;
            }
        });
    }
};
export default RadChartPlugin;
//# sourceMappingURL=index.js.map